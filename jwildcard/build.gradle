plugins {
    id "com.jfrog.bintray" version "1.8.2"
    id "org.sonarqube" version "2.6"
}

version jwildcardVersion
group 'com.yevdo'

repositories {
    jcenter()
}

apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'jacoco'

dependencies {
    testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
    testImplementation group: 'cglib', name: 'cglib-nodep', version: '3.2.4'
}


bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['publisher']
    pkg {
        repo = 'jwildcard'
        name = 'jwildcard'
        userOrg = 'yevdo'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/alenon/JWildcard.git'
        labels = ['wildcard', 'java']
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = 'JWildcard - wildcard utilities for Java'
            vcsTag = project.version

            gpg {
                sign = true
                passphrase = System.getenv('GPG_PASSPHRASE')
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    title "JWildcard v$jwildcardVersion"
    destinationDir file("${rootDir.path}/docs")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://github.com/alenon/JWildcard/blob/master/LICENSE"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "alenon"
            name "Yevdo Abramov"
            email "lenon.abr@gmail.com"
        }
    }

    scm {
        url "https://github.com/alenon/JWildcard"
    }
}

publishing {
    publications {
        publisher(MavenPublication) {
            from components.java
            groupId project.group
            artifactId 'jwildcard'
            version project.version

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'JWildcard - wildcard utilities for Java')
                root.appendNode('name', 'JWildcard')
                root.appendNode('url', 'https://github.com/alenon/JWildcard')
                root.children().last() + pomConfig
            }
        }
    }
    
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/alenon/JWildcard"
            credentials = {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.5"
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", System.getenv("SONAR_LOGIN")
        property "sonar.organization", "alenon"
        property "sonar.projectKey", "com.yevdo.jwildcard"
        property "sonar.projectName", "JWildcard"
        property 'sonar.projectBaseDir', "${project.projectDir}"
        property 'sonar.working.directory', "${project.buildDir}/sonar"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.scm.provider", "git"
        property "sonar.java.coveragePlugin", "jacoco"
    }
}
